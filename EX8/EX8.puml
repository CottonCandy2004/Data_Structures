@startuml bubbleSort
title 冒泡排序算法流程图

start
:初始化 i = 0;
while (i < n-1) is (true)
    :初始化 j = 0;
    while (j < n-i-1) is (true)
        if (arr[j] > arr[j+1]) then (yes)
            :交换 arr[j] 和 arr[j+1];
        endif
        :j = j + 1;
    endwhile (false)
    :i = i + 1;
endwhile (false)
stop

@enduml

@startuml quickSort
title 快速排序算法流程图

start
if (low < high)
    :pi = partition(arr, low, high);
    :quickSort(arr, low, pi-1);
    :quickSort(arr, pi+1, high);
endif
stop
@enduml

@startuml shellSort
title 希尔排序算法流程图

start
:gap = n / 2;
while (gap > 0)
    :i = gap;
    while (i < n)
        :temp = arr[i];
        :j = i;
        while (j >= gap && arr[j - gap] > temp)
            :arr[j] = arr[j - gap];
            :j = j - gap;
        endwhile
        :arr[j] = temp;
        :i = i + 1;
    endwhile
    :gap = gap / 2;
endwhile
stop
@enduml

@startuml heapSort
title 堆排序算法流程图

start
    :i = n / 2 - 1;
    while (i >= 0)
        :heapify(arr, n, i);
        :i = i - 1;
    endwhile

    :i = n - 1;
    while (i > 0)
        :swap(arr[0], arr[i]);
        :heapify(arr, i, 0);
        :i = i - 1;
    endwhile
stop
@enduml

